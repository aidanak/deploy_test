server {
  return 404;
}

upstream wodify_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/home/ubuntu/run/gunicorn.sock fail_timeout=0;
}

server {
  listen       0.0.0.0:80;
  server_name 18.218.177.156;

  client_max_body_size 100m;


  location /api {
    # Access control for CORS
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "cache-control, content-range, accept, origin, session-id, content-disposition, x-requested-with, content-type, content-description, referer, user-agent, auth-token" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # 10 minute pre-flight approval
    add_header Access-Control-Max-Age 600 always;

    if ($request_method = OPTIONS) {
      return 204;
    }
  
    proxy_pass http://wodify_server;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location / {
    root /home/ubuntu/wodify_backend/front/build;
    try_files $uri /index.html;
    proxy_connect_timeout       6000;
    proxy_send_timeout          6000;
    proxy_read_timeout          6000;
    send_timeout                6000;
  }

}